library(MASS)
Cov = matrix(0,nrow = 10, ncol = 10) #Initializing covariance matrix
alpha = 0.9 #multiplier
p = 10 #dimension
rho = 0.75 #correlation
for(i in 1:p){
for(j in 1:p){
Cov[i,j] = rho^abs(i-j)
}
}
mean = rep(0,10) #mean of error
n = 1000 #sample size
Process = function(multiplier, mean, Var, dimension, size){ #Function producing process
vec = matrix(0, nrow = p, ncol = n) #Initializing vectors
Y = numeric(0)
Y[1] = 0
for(i in 2:n){#Generating Auto-regressive Process
vec[,i] = multiplier*vec[,i-1] + mvrnorm(1,mean,Var)
Y[i] = sum(vec[,i])
}
return(Y)
}
#Plotting sum of the elements of random vectors
plot.ts(Process(0.9,mean,Cov,p,n), ylab = "Sum of process components", main = "Trace Plot")
library(MASS)
alpha = 0.9 #multiplier
p = 10 #dimension
Cov = matrix(0,nrow = p, ncol = p) #Initializing covariance matrix
rho = 0.75 #correlation
for(i in 1:p){
for(j in 1:p){
Cov[i,j] = rho^abs(i-j)
}
}
mean = rep(0,10) #mean of error
n = 1000 #sample size
#Function producing process
Process = function(multiplier, mean, Var, dimension, size){
vec = matrix(0, nrow = p, ncol = n) #Initializing vectors
Y = numeric(0)
Y[1] = 0
for(i in 2:n){#Generating Auto-regressive Process
vec[,i] = multiplier*vec[,i-1] + mvrnorm(1,mean,Var)
Y[i] = sum(vec[,i])
}
return(Y)
}
#Plotting sum of the elements of random vectors
plot.ts(Process(0.9,mean,Cov,p,n), ylab = "Sum of process components", main = "Trace Plot")
